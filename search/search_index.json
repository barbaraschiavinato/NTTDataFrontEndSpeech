{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Calendar","text":""},{"location":"index.html#first-speech","title":"First speech","text":"Q1-2025<p>Github Copilot and Real-Time Data Handling.- Mastering Github Copilot - Anthony Albertyn- Handling real-time data in React - Barbara Schiavinato</p>"},{"location":"Q1-2025/real-time-data.html","title":"Real-time data","text":""},{"location":"Q1-2025/real-time-data.html#title-real-time-data-handling-with-websockets-and-react","title":"Title: Real-Time Data Handling with WebSockets and React","text":""},{"location":"Q1-2025/real-time-data.html#1-introduction-to-real-time-data-5-minutes","title":"1. Introduction to Real-Time Data (5 minutes)","text":"<ul> <li>Brief overview of real-time data and its importance.</li> <li>Use cases in modern applications (e.g., chat applications, live updates, collaborative tools).</li> </ul>"},{"location":"Q1-2025/real-time-data.html#2-websockets-the-backbone-of-real-time-communication-5-minutes","title":"2. WebSockets: The Backbone of Real-Time Communication (5 minutes)","text":"<ul> <li>Explanation of WebSockets and how they differ from HTTP.</li> <li>Benefits of using WebSockets for real-time communication.</li> <li>Example scenarios where WebSockets are preferable.</li> </ul>"},{"location":"Q1-2025/real-time-data.html#3-setting-up-websockets-in-a-react-application-10-minutes","title":"3. Setting Up WebSockets in a React Application (10 minutes)","text":"<ul> <li>Step-by-step guide to integrating WebSockets with a React app.</li> <li>Code snippets to establish WebSocket connections.</li> <li>Handling connection events (open, message, close, error).</li> <li>Example: Creating a simple real-time chat application.</li> </ul>"},{"location":"Q1-2025/real-time-data.html#4-state-management-for-real-time-data-5-minutes","title":"4. State Management for Real-Time Data (5 minutes)","text":"<ul> <li>Managing state in React to handle real-time updates.</li> <li>Using React hooks (useState, useEffect) for WebSocket events.</li> <li>Example: Updating the UI in response to incoming WebSocket messages.</li> </ul>"},{"location":"Q1-2025/real-time-data.html#5-best-practices-and-performance-optimization-5-minutes","title":"5. Best Practices and Performance Optimization (5 minutes)","text":"<ul> <li>Strategies for efficiently managing WebSocket connections.</li> <li>Ensuring reliability and scalability in real-time applications.</li> <li>Handling connection issues and reconnections.</li> </ul>"},{"location":"Q1-2025/real-time-data.html#6-qa-and-live-demo-5-minutes","title":"6. Q&amp;A and Live Demo (5 minutes)","text":"<ul> <li>Live demonstration of the real-time chat application.</li> <li>Open the floor for questions from the audience.</li> <li>Wrap-up and key takeaways.</li> </ul>"},{"location":"Q1-2025/real-time-data.html#additional-notes","title":"Additional Notes","text":"<ul> <li>Demo: A live demo can significantly enhance the talk. Consider setting up a simple chat app that participants can interact with during the session.</li> <li>Preparation: Have code snippets and examples ready to share with the audience for reference.</li> </ul>"}]}